//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClient2.ServiceReference5 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AsyncComplexNumber", Namespace="http://schemas.datacontract.org/2004/07/AsyncCallbackService")]
    [System.SerializableAttribute()]
    public partial class AsyncComplexNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ImaginaryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RealValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImaginaryValue {
            get {
                return this.ImaginaryValueField;
            }
            set {
                if ((this.ImaginaryValueField.Equals(value) != true)) {
                    this.ImaginaryValueField = value;
                    this.RaisePropertyChanged("ImaginaryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RealValue {
            get {
                return this.RealValueField;
            }
            set {
                if ((this.RealValueField.Equals(value) != true)) {
                    this.RealValueField = value;
                    this.RaisePropertyChanged("RealValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference5.IAsyncComplexCalculator", CallbackContract=typeof(WcfServiceClient2.ServiceReference5.IAsyncComplexCalculatorCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAsyncComplexCalculator {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAsyncComplexCalculator/AddComplex")]
        void AddComplex(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAsyncComplexCalculator/AddComplex")]
        System.Threading.Tasks.Task AddComplexAsync(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAsyncComplexCalculator/MultipleComplex")]
        void MultipleComplex(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAsyncComplexCalculator/MultipleComplex")]
        System.Threading.Tasks.Task MultipleComplexAsync(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAsyncComplexCalculatorCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAsyncComplexCalculator/CalculationResult")]
        void CalculationResult(string operation, WcfServiceClient2.ServiceReference5.AsyncComplexNumber result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAsyncComplexCalculatorChannel : WcfServiceClient2.ServiceReference5.IAsyncComplexCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsyncComplexCalculatorClient : System.ServiceModel.DuplexClientBase<WcfServiceClient2.ServiceReference5.IAsyncComplexCalculator>, WcfServiceClient2.ServiceReference5.IAsyncComplexCalculator {
        
        public AsyncComplexCalculatorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AsyncComplexCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AsyncComplexCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AsyncComplexCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AsyncComplexCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddComplex(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2) {
            base.Channel.AddComplex(number1, number2);
        }
        
        public System.Threading.Tasks.Task AddComplexAsync(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2) {
            return base.Channel.AddComplexAsync(number1, number2);
        }
        
        public void MultipleComplex(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2) {
            base.Channel.MultipleComplex(number1, number2);
        }
        
        public System.Threading.Tasks.Task MultipleComplexAsync(WcfServiceClient2.ServiceReference5.AsyncComplexNumber number1, WcfServiceClient2.ServiceReference5.AsyncComplexNumber number2) {
            return base.Channel.MultipleComplexAsync(number1, number2);
        }
    }
}
